#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps

# Heroku-provided params
BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

BLACKLIST_REGEX="^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$"
if [ -d "$ENV_DIR" ]; then
  echo "Exporting config vars"
  for e in $(ls "$ENV_DIR"); do
    echo "$e" | grep -qvE "$BLACKLIST_REGEX" &&
    export "$e=$(cat $ENV_DIR/$e)"
    :
  done
fi

cd $BUILD_DIR
echo "Installing Polymer 3..."
npm install -g polymer-cli

echo "========================================================================="
echo "Building Frontend"
echo "========================================================================="

npm install --production=false || exit 1
echo "Npm install --procution DONE"
polymer build --env=production --verbose || exit 1
echo "polymer build DONE"

echo "========================================================================="
echo "Building Server"
echo "========================================================================="

export NODE_ENV="production"

mkdir -p certs config
cp package-lock.json build/
cp index.js build/
cp package.json build/
cp -R config build/
cp -R certs build/
rm -r node_modules/* 
cd build
npm install --production --unsafe-perm || exit 1
